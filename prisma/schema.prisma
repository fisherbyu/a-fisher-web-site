// Prisma Schema Definition

// Connection Configurations
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Table Definitions
model Artist {
  id        String      @id @default(uuid()) @db.Uuid
  tier      Int
  rank      Int?
  name      String
  content   Content[] 
  tags      Tag[]
  musicLink MusicLink
  image     Image

  @@map("artists")
}

model Album {
    id          String      @id @default(uuid()) @db.Uuid
    rank        Int
    name        String
    content     Content[] 
    tags        Tag[]
    musicLink   MusicLink
    image       Image
}

model Content {
    id          String  @id @default(uuid()) @db.Uuid
    order       Int     
    text        String
    artist      Artist? @relation(fields: [artistId], references: [id])
    artistId    String?
    album       Album?  @relation(fields: [albumId], references: [id])
    albumId     String?
    
}

model Tag {
    id          String      @id @default(uuid()) @db.Uuid
    title       String      
    text        String
    order       Int
    artist      Artist? @relation(fields: [artistId], references: [id])
    artistId    String?
    album       Album?  @relation(fields: [albumId], references: [id])
    albumId     String?
}

model MusicLink {
    id          String      @id @default(uuid()) @db.Uuid
    appleURI    String
    spotifyURI  String
    artist      Artist? @relation(fields: [artistId], references: [id])
    artistId    String?
    album       Album?  @relation(fields: [albumId], references: [id])
    albumId     String?
}

model Image {
    id          String      @id @default(uuid()) @db.Uuid
    src         String
    alt         String
    artist      Artist? @relation(fields: [artistId], references: [id])
    artistId    String?
    album       Album?  @relation(fields: [albumId], references: [id])
    albumId     String?
}